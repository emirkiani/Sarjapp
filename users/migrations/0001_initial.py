# Generated by Django 3.2.16 on 2023-05-12 17:42

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=255)),
                ('surname', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('phone_number', models.CharField(max_length=10)),
                ('country', models.CharField(max_length=255)),
                ('is_guest', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='areas',
            fields=[
                ('areaid', models.IntegerField(primary_key=True, serialize=False)),
                ('countyid', models.IntegerField()),
                ('areaname', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('license_plate', models.CharField(max_length=255)),
                ('battery_health', models.IntegerField()),
                ('model_year', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Car_list',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(max_length=255)),
                ('model', models.CharField(max_length=255)),
                ('total_range', models.CharField(max_length=255)),
                ('connection_type', models.CharField(max_length=255)),
                ('connection_value', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Charge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(null=True)),
                ('price', models.IntegerField(null=True)),
                ('status', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='cities',
            fields=[
                ('cityid', models.IntegerField(primary_key=True, serialize=False)),
                ('countryid', models.IntegerField()),
                ('cityname', models.CharField(max_length=100)),
                ('plateno', models.CharField(max_length=2)),
                ('phonecode', models.CharField(max_length=7)),
            ],
        ),
        migrations.CreateModel(
            name='Connection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('power', models.CharField(max_length=255)),
                ('status', models.CharField(max_length=255)),
                ('connection_code', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='counties',
            fields=[
                ('countyid', models.IntegerField(primary_key=True, serialize=False)),
                ('cityid', models.IntegerField()),
                ('countyname', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='countries',
            fields=[
                ('countryid', models.IntegerField(primary_key=True, serialize=False)),
                ('binarycode', models.CharField(max_length=2)),
                ('triplecode', models.CharField(max_length=3)),
                ('countryname', models.CharField(max_length=100)),
                ('phonecode', models.CharField(max_length=6)),
            ],
        ),
        migrations.CreateModel(
            name='Firm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=255)),
                ('password', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='neighborhoods',
            fields=[
                ('neighborhoodid', models.IntegerField(primary_key=True, serialize=False)),
                ('areaid', models.IntegerField()),
                ('neighborhoodname', models.CharField(max_length=100)),
                ('zipcode', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('capacity', models.IntegerField()),
                ('on_time', models.CharField(max_length=255)),
                ('off_time', models.CharField(max_length=255)),
                ('status', models.CharField(max_length=255)),
                ('firm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stations', to='users.firm')),
            ],
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_location', models.CharField(max_length=255)),
                ('end_location', models.CharField(max_length=255)),
                ('started_at', models.DateTimeField()),
                ('range', models.IntegerField()),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.car')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Station_Price',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AC', models.IntegerField()),
                ('DC', models.IntegerField()),
                ('station', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.station')),
            ],
        ),
        migrations.CreateModel(
            name='Station_location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_adress', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('country', models.CharField(max_length=255)),
                ('latitude', models.CharField(max_length=255)),
                ('longitude', models.CharField(max_length=255)),
                ('station', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.station')),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reserved_at', models.DateTimeField()),
                ('reservation_start_time', models.TimeField()),
                ('reservation_end_time', models.TimeField()),
                ('status', models.CharField(max_length=255)),
                ('reserv_date', models.DateField()),
                ('connection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.connection')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.station')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(blank=True, null=True)),
                ('payment_status', models.CharField(max_length=15)),
                ('payment_time', models.DateTimeField()),
                ('charge', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.charge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_status', models.CharField(max_length=15)),
                ('order_date', models.DateTimeField()),
                ('charge', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.charge')),
                ('payment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.payment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Favorites',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.station')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='connection',
            name='station',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='connection', to='users.station'),
        ),
        migrations.AddField(
            model_name='charge',
            name='connection',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.connection'),
        ),
        migrations.AddField(
            model_name='charge',
            name='reservation',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.reservation'),
        ),
        migrations.AddField(
            model_name='charge',
            name='station',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.station'),
        ),
        migrations.AddField(
            model_name='charge',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='car',
            name='car',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carss', to='users.car_list'),
        ),
        migrations.AddField(
            model_name='car',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Adress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('full_adress', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('latitude', models.CharField(max_length=255)),
                ('longitude', models.CharField(max_length=255)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.cities')),
                ('counties', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.counties')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
